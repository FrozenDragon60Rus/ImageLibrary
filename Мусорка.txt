/*internal struct Image : GetData, SetData
{
    public int Id { get; set; }
    public string Address { get; set; }
    public string Tag { get; set; }
    public byte Raiting { get; set; }
    public Image(int id, string address, string tag, byte rating)
    {
        Id = id;
        Address = address;
        Tag = tag;
        Raiting = rating;
    }
    public object[] Value()
    {
        Image image = this;
        return image.GetType()
                    .GetProperties()
                    .Select(property => property.GetValue(image))
                    .ToArray();
    }
    public string[] Key()
    {
        string[] name;
        PropertyInfo[] property = GetType().GetProperties();
        name = new string[property.Length];
        int i = 0;
        foreach (PropertyInfo propertyInfo in property)
            name[i++] = propertyInfo.ToString()
                                    .Split(' ')
                                    .Last();
        return name;
    }
    public Dictionary<string, object> Parameter() => MyConvert.ArrayToDictionary(Key(), Value());

    public void Value(object[] data)
    {
        int index = 0;
        Id = (int)data[index++];
        Address = (string)data[index++];
        Tag = (string)data[index++];
        Raiting = (byte)data[index++];
    }
}*/

/*foreach (string t in SeatchPatterns.Tag)
    marker.Add(new Table.Marker(
               new Dictionary<string, object>() 
               {
                   { "Id", -1 },
                   { "Tag", t },
                   { "Author", string.Empty },
                   { "Character", string.Empty }
               }));
foreach (string str in marker[0].Key())
    Console.WriteLine(str);
tag.Add(marker);*/